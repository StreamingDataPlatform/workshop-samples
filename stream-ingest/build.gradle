/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */
apply plugin: "distribution"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"
apply plugin: 'com.github.johnrengelman.shadow'

archivesBaseName = 'stream-ingest'

group = "com.dellemc.oe.ingest"
version = samplesVersion

description = "stream-ingest"
mainClassName = "com.dellemc.oe.ingest.JSONWriter"
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile project(':common')
    compile "io.pravega:pravega-client:${pravegaVersion}"
    compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.1"
    if (includePravegaCredentials.toBoolean()) {
        compile "io.pravega:pravega-keycloak-client:${pravegaCredentialsVersion}"
    }
}

// Build examples
task scriptEventWriter(type: CreateStartScripts) {
    outputDir = file('build/scripts')
    mainClassName = 'com.dellemc.oe.ingest.EventWriter'
    applicationName = 'eventWriter'
    classpath = files(jar.archivePath) + sourceSets.main.runtimeClasspath
}

task startEventWriter(type: JavaExec) {
    main = "com.dellemc.oe.ingest.EventWriter"
    classpath = sourceSets.main.runtimeClasspath
    if(System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}

// Build examples
task scriptJSONWriter(type: CreateStartScripts) {
    outputDir = file('build/scripts')
    mainClassName = 'com.dellemc.oe.ingest.JSONWriter'
    applicationName = 'jsonWriter'
    classpath = files(jar.archivePath) + sourceSets.main.runtimeClasspath
}

task startJSONWriter(type: JavaExec) {
    main = "com.dellemc.oe.ingest.JSONWriter"
    classpath = sourceSets.main.runtimeClasspath
    if(System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}
distributions {
    main {
        baseName = archivesBaseName
        contents {
            into('bin') {

            }
            into('lib') {
                from(jar)
                from(project.configurations.runtime)
                from shadowJar
                from(project.configurations.shadow)
            }
            into('conf') {
                from(project.file('src/main/resources/logback.xml'))
            }
        }
    }
publishing {
    repositories {
        maven {
            credentials {
                username System.getenv("MAVEN_USER")
                password System.getenv("MAVEN_PASSWORD")
            }
            url projectRepoUrl
        }
    }
    publications {
        shadow(MavenPublication) { publication ->
             project.shadow.component(publication)
            }
        }
    }
}
