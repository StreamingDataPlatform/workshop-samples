plugins {
    id 'java'
    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.8'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

apply plugin: "maven"

group = "com.dellemc.oe.gateway"
version = samplesVersion
archivesBaseName = "gateway"
description = "gateway"
mainClassName = "com.dellemc.oe.gateway.rest.Main"
sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {

    compile project(':common')

    compile "org.slf4j:slf4j-api:1.7.13"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "ch.qos.logback:logback-core:1.2.3"
    compile "net.logstash.logback:logstash-logback-encoder:4.11"
    compile group: 'io.netty', name: 'netty-all', version: '4.1.30.Final'
    compile "io.grpc:grpc-netty:" + '1.17.1'
    compile "io.grpc:grpc-auth:" + '1.17.1'
    compile "io.grpc:grpc-protobuf:" + '1.17.1'
    compile "io.grpc:grpc-stub:" + '1.17.1'
    compile group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: '2.0.17.Final'

    runtime files ('lib/pravega-keycloak-credentials-shadow.jar')
    compile "io.pravega:pravega-client:${pravegaVersion}"
    compile "io.pravega:pravega-common:${pravegaVersion}"

    // common-library dependencies
    compile "com.google.guava:guava:20.0"
    compile "org.xerial:sqlite-jdbc:3.20.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.1"
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.25.1"
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.5.1" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.17.1" }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

jar {
    zip64 true
    manifest {
        attributes "Main-Class": mainClassName
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

