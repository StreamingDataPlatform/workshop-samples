/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

buildscript {
    repositories {
        maven {
            name "artifactory"
            url artifactoryUrl
        }
        maven {
            name "prerelease"
            url "http://asdrepo.isus.emc.com:8081/artifactory/nautilus-prerelease-local"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowJarPluginVersion}"
        classpath "com.github.jk1:gradle-license-report:1.7"
    }
}


subprojects {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            name "artifactory"
            url artifactoryUrl
        }
        maven {
            url "https://repository.apache.org/snapshots"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "http://central.maven.org/maven2"
        }
        maven {
            url "https://repo.eclipse.org/content/repositories/paho-snapshots/"
        }
        maven {
            url "http://oss.jfrog.org/jfrog-dependencies"
        }
    }

}

task displayProperties {
   displaySystemProperties()
   displayGradleProjectProperties()
}

def displaySystemProperties()
{
   println "\n=== System Properties ==="
   println "System Properties: ${System.properties['mySystemProperty']}"
}
def displayGradleProjectProperties()
{
   println "\n=== Gradle Project Properties ==="
   println "Workshop Properties Project Name : ${getProjectProperty('nautilus-project-name')}"
   println "Workshop Properties scope name: ${getProjectProperty('scope-name')}"
   println "Workshop Properties stream name: ${getProjectProperty('stream-name')}"
   println "Workshop Properties Project Name : ${getProjectProperty('pravega_client_auth_method')}"
   println "Workshop Properties scope name: ${getProjectProperty('pravega_client_auth_loadDynamic')}"
   println "Workshop Properties stream name: ${getProjectProperty('KEYCLOAK_SERVICE_ACCOUNT_FILE')}"
}

def String getProjectProperty(String propertyName)
{
   String propertyValue = "null"
   if (hasProperty(propertyName))
   {
      propertyValue = this.properties[propertyName]
   }
   return propertyValue
}

task copy(type: Copy) {
    from 'common'
    into 'common'
    include 'workshop-setEnv.sh.template'
    rename { file -> 'workshop-setEnv.sh' }
    expand(
        pravega_client_auth_method: "${getProjectProperty('pravega_client_auth_method')}", 
        pravega_client_auth_loadDynamic: "${getProjectProperty('pravega_client_auth_loadDynamic')}",
        KEYCLOAK_SERVICE_ACCOUNT_FILE: "${getProjectProperty('KEYCLOAK_SERVICE_ACCOUNT_FILE')}",
        nautilus_project_name: "${getProjectProperty('nautilus-project-name')}",
        scope_name: "${getProjectProperty('scope-name')}",
        stream_name: "${getProjectProperty('stream-name')}"
         )
}
