/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */
apply plugin: "distribution"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"
apply plugin: 'com.github.johnrengelman.shadow'

group = "com.dellemc.oe.flink.wordcount"
version = samplesVersion
archivesBaseName = "stream-to-stream"
description = "stream-to-stream"
mainClassName = "com.dellemc.oe.flink.wordcount.WordCountReader"
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    scalaJava8CompatVersion = '0.7.0'
}

dependencies {
    compile project(':common')
    if (includePravegaCredentials.toBoolean()) {
        compile "io.pravega:pravega-keycloak-client:${pravegaCredentialsVersion}"
    }
    compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "io.pravega:pravega-connectors-flink-${flinkShortVersion}_${flinkScalaVersion}:${pravegaFlinkConnectorVersion}"
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-scala_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-ml_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table_${flinkScalaVersion}:${flinkVersion}"
    compile "io.pravega:pravega-client:${pravegaVersion}"

    // common-library dependencies
    compile "com.google.guava:guava:20.0"
    compile "org.xerial:sqlite-jdbc:3.20.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.1"

    testCompile "org.apache.flink:flink-test-utils_${flinkScalaVersion}:${flinkVersion}"
    testCompile group: "junit", name: "junit", version: "4.11"

}

task scriptWordCountWriter(type: CreateStartScripts) {
    outputDir = file('build/scripts')
    mainClassName = 'com.dellemc.oe.flink.wordcount.WordCountWriter'
    applicationName = 'wordCountWriter'
    classpath = files(jar.archivePath) + sourceSets.main.runtimeClasspath
}

task scriptWordCountReader(type: CreateStartScripts) {
    outputDir = file('build/scripts')
    mainClassName = 'com.dellemc.oe.flink.wordcount.WordCountReader'
    applicationName = 'wordCountReader'
    classpath = files(jar.archivePath) + sourceSets.main.runtimeClasspath
}

shadowJar {
    dependencies {
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency("org.scala-lang:scala-compiler"))
    }
    classifier = ""
    zip64 true
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into('bin') {
                              
            }
            into('lib') {
                from(jar)
                from(project.configurations.runtime)
                from shadowJar
                from(project.configurations.shadow)
            }
            into('conf') {
                from(project.file('src/main/resources/logback.xml'))
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username userName
                    password passWord
                }
                url projectRepoUrl
            }
        }

       publications {
           shadow(MavenPublication) { publication ->
               project.shadow.component(publication)
           }
       }
    }
}
